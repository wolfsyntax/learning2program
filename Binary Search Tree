Wolf Syntax (c) 2016
Binary Search Tree

L = Left-Sub-tree
R = Right-Sub-tree
V = Root

[inorder  : LVR]
[preorder : VLR]
[postorder: LRV] 


INORDER TRAVERSAL

(defun inorder(x) 
	(if (null x) 
		nil
		(append
			(if (null x) nil)
			(if (not (listp x)) nil)
			(inorder (first (rest x)))
			(list (first x))
			(inorder (first (rest (rest x))))
					
		)
	)
)


PREORDER TRAVERSAL

(defun preorder(x) 
	(if (null x) 
		nil
		(append
			(if (null x) nil)
			(if (not (listp x)) nil)
			(list (first x))
			(preorder (first (rest x)))
			(preorder (first (rest (rest x))))
					
		)
	)
)


POSTORDER TRAVERSAL

(defun postorder(x) 
	(if (null x) 
		nil
		(append
			(if (null x) nil)
			(if (not (listp x)) nil)
			
			(postorder (first (rest x)))
			(postorder (first (rest (rest x))))
			(list (first x))		
		)
	)
)
